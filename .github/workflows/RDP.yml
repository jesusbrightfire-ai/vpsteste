name: RDP + AnyDesk VPS

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      # ====================================================
      # üîß CONFIGURA√á√ÉO B√ÅSICA DE RDP
      # ====================================================
      - name: Enable Remote Desktop
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                            -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                            -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                            -Name "SecurityLayer" -Value 0 -Force

          netsh advfirewall firewall delete rule name="RDP-Tailscale" || Write-Host "No existing rule"
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      - name: Create RDP User
        run: |
          $username = "RDP"
          $passwordPlain = "@vps123"
          $securePass = ConvertTo-SecureString $passwordPlain -AsPlainText -Force

          if (Get-LocalUser -Name $username -ErrorAction SilentlyContinue) {
            net user $username $passwordPlain
          } else {
            New-LocalUser -Name $username -Password $securePass -AccountNeverExpires
          }

          Add-LocalGroupMember -Group "Administrators" -Member $username -ErrorAction SilentlyContinue
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username -ErrorAction SilentlyContinue

          "RDP_USER=$username" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "RDP_PASS=$passwordPlain" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Host "‚úÖ User $username created."

      # ====================================================
      # üåê TAILSCALE (VPN)
      # ====================================================
      - name: Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force
          Write-Host "‚úÖ Tailscale installed."

      - name: Connect to Tailscale
        run: |
          Start-Process -FilePath "$env:ProgramFiles\Tailscale\tailscaled.exe"
          Start-Sleep -Seconds 5
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname="gh-runner-$env:GITHUB_RUN_ID" --accept-dns=false
          
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 12) {
            $tsIP = (& "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4) -join ";"
            if ($tsIP) { break }
            Start-Sleep -Seconds 5
            $retries++
          }

          if (-not $tsIP) { Write-Error "‚ùå Tailscale IP not found"; exit 1 }

          "TAILSCALE_IP=$tsIP" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Host "‚úÖ Connected to Tailscale IP: $tsIP"

      # ====================================================
      # üíª ANYDESK - Instala√ß√£o e Configura√ß√£o
      # ====================================================
      - name: Install AnyDesk
        shell: pwsh
        run: |
          $msiUrl = "https://download.anydesk.com/AnyDesk.msi"
          $installer = "$env:TEMP\AnyDesk.msi"
          Write-Host "Downloading AnyDesk..."
          Invoke-WebRequest -Uri $msiUrl -OutFile $installer -UseBasicParsing
          Start-Process -FilePath "msiexec.exe" -ArgumentList "/i `"$installer`" /qn /norestart" -Wait
          Remove-Item $installer -Force
          Write-Host "‚úÖ AnyDesk installed."

      - name: Configure AnyDesk Unattended Access
        shell: pwsh
        env:
          ANYDESK_PASS: ${{ secrets.ANYDESK_PASS }}
        run: |
          $paths = @(
            "${env:ProgramFiles(x86)}\AnyDesk\AnyDesk.exe",
            "${env:ProgramFiles}\AnyDesk\AnyDesk.exe"
          )
          $anydesk = $paths | Where-Object { Test-Path $_ } | Select-Object -First 1
          if (-not $anydesk) { throw "‚ùå AnyDesk executable not found!" }

          Write-Host "Configuring AnyDesk Unattended Access..."
          # Aplica a senha (se suportado)
          echo $env:ANYDESK_PASS | & "$anydesk" --set-password _unattended_access
          Start-Sleep -Seconds 3

          # Pega o ID
          $id = (& "$anydesk" --get-id) -join "" | ForEach-Object { $_.Trim() }
          if (-not $id) { throw "‚ùå Could not read AnyDesk ID." }

          "ANYDESK_ID=$id" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Host "‚úÖ AnyDesk ID: $id"

      # ====================================================
      # ‚úÖ EXIBI√á√ÉO FINAL
      # ====================================================
      - name: Display Connection Info
        shell: pwsh
        run: |
          Write-Host "`n==============================="
          Write-Host "üü¢ VPS READY!"
          Write-Host "üîπ RDP via Tailscale:"
          Write-Host "   IP: $env:TAILSCALE_IP"
          Write-Host "   User: $env:RDP_USER"
          Write-Host "   Pass: $env:RDP_PASS"
          Write-Host ""
          Write-Host "üîπ AnyDesk Access:"
          Write-Host "   ID: $env:ANYDESK_ID"
          Write-Host "   Pass: (secret in ANYDESK_PASS)"
          Write-Host "==============================="

      - name: Keep Machine Alive
        run: |
          Write-Host "Keeping VPS alive... (Press stop in Actions to end)"
          while ($true) {
            Write-Host "[$(Get-Date)] VPS online..."
            Start-Sleep -Seconds 300
          }
